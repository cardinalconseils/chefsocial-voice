name: Deploy Integrated App with Admin Panel

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy-integrated:
    runs-on: ubuntu-latest
    steps:
      - name: 🔍 Checkout code
        uses: actions/checkout@v4
      
      - name: 📋 Log deployment info
        run: |
          echo "🔍 Integrated App Deployment (Main + Admin)"
          echo "==========================================="
          echo "Event: ${{ github.event_name }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"
          echo "Actor: ${{ github.actor }}"
          echo ""
          echo "📁 Project structure:"
          ls -la
          echo ""
      
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: 📦 Install main app dependencies
        run: |
          echo "📦 Installing main app dependencies..."
          npm install
          echo "✅ Main app dependencies installed"
      
      - name: 📦 Install admin panel dependencies
        working-directory: ./admin-panel
        run: |
          echo "📦 Installing admin panel dependencies..."
          npm install
          echo "✅ Admin panel dependencies installed"
      
      - name: 🏗️ Build and integrate admin panel
        run: |
          echo "🏗️ Building admin panel and integrating with main app..."
          ./deploy-admin.sh
          echo "✅ Admin panel integrated at /admin"
          echo "📁 Verification:"
          ls -la public/admin/ || echo "❌ Admin integration failed"
      
      - name: 🔍 Verify Vercel secrets
        run: |
          echo "🔍 Verifying Vercel secrets..."
          echo "VERCEL_TOKEN exists: ${{ secrets.VERCEL_TOKEN != '' }}"
          echo "VERCEL_ORG_ID exists: ${{ secrets.VERCEL_ORG_ID != '' }}"
          echo "VERCEL_PROJECT_ID exists: ${{ secrets.VERCEL_PROJECT_ID != '' }}"
          
          if [ -z "${{ secrets.VERCEL_TOKEN }}" ]; then
            echo "❌ VERCEL_TOKEN is missing"
            echo "Please add VERCEL_TOKEN to repository secrets"
            exit 1
          fi
          
          if [ -z "${{ secrets.VERCEL_ORG_ID }}" ]; then
            echo "❌ VERCEL_ORG_ID is missing"
            echo "Please add VERCEL_ORG_ID to repository secrets"
            exit 1
          fi
          
          if [ -z "${{ secrets.VERCEL_PROJECT_ID }}" ]; then
            echo "❌ VERCEL_PROJECT_ID is missing"
            echo "Please add VERCEL_PROJECT_ID to repository secrets"
            exit 1
          fi
          
          echo "✅ All required secrets are present"
      
      - name: 🚀 Deploy integrated app to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          echo "🚀 Deploying integrated app to Vercel..."
          npx vercel --version
          npx vercel pull --yes --environment=production --token=$VERCEL_TOKEN
          npx vercel build --prod --token=$VERCEL_TOKEN
          npx vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN
      
      - name: ✅ Deployment complete
        run: |
          echo "🎉 Integrated app deployment completed!"
          echo "🌐 Main app: Available at your Vercel domain"
          echo "🔧 Admin panel: Available at /admin"
          echo ""
          echo "📋 Next steps:"
          echo "1. Test main app functionality"
          echo "2. Test admin panel at /admin"
          echo "3. Verify API connectivity"
          echo "4. Configure custom domain if needed"