"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/auth/route";
exports.ids = ["app/api/auth/route"];
exports.modules = {

/***/ "better-sqlite3":
/*!*********************************!*\
  !*** external "better-sqlite3" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("better-sqlite3");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2Froute&page=%2Fapi%2Fauth%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Froute.ts&appDir=%2FUsers%2Fpierre-marccardinal%2FDocuments%2Fchefsocial-voice%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fpierre-marccardinal%2FDocuments%2Fchefsocial-voice&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2Froute&page=%2Fapi%2Fauth%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Froute.ts&appDir=%2FUsers%2Fpierre-marccardinal%2FDocuments%2Fchefsocial-voice%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fpierre-marccardinal%2FDocuments%2Fchefsocial-voice&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_pierre_marccardinal_Documents_chefsocial_voice_src_app_api_auth_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/auth/route.ts */ \"(rsc)/./src/app/api/auth/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/auth/route\",\n        pathname: \"/api/auth\",\n        filename: \"route\",\n        bundlePath: \"app/api/auth/route\"\n    },\n    resolvedPagePath: \"/Users/pierre-marccardinal/Documents/chefsocial-voice/src/app/api/auth/route.ts\",\n    nextConfigOutput,\n    userland: _Users_pierre_marccardinal_Documents_chefsocial_voice_src_app_api_auth_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/auth/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZhdXRoJTJGcm91dGUmcGFnZT0lMkZhcGklMkZhdXRoJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGYXV0aCUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnBpZXJyZS1tYXJjY2FyZGluYWwlMkZEb2N1bWVudHMlMkZjaGVmc29jaWFsLXZvaWNlJTJGc3JjJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRnBpZXJyZS1tYXJjY2FyZGluYWwlMkZEb2N1bWVudHMlMkZjaGVmc29jaWFsLXZvaWNlJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUMrQjtBQUM1RztBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL2NoZWZzb2NpYWwtbmV4dC8/NTgxYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvcGllcnJlLW1hcmNjYXJkaW5hbC9Eb2N1bWVudHMvY2hlZnNvY2lhbC12b2ljZS9zcmMvYXBwL2FwaS9hdXRoL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9hdXRoL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvYXV0aFwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvYXV0aC9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy9waWVycmUtbWFyY2NhcmRpbmFsL0RvY3VtZW50cy9jaGVmc29jaWFsLXZvaWNlL3NyYy9hcHAvYXBpL2F1dGgvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL2F1dGgvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2Froute&page=%2Fapi%2Fauth%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Froute.ts&appDir=%2FUsers%2Fpierre-marccardinal%2FDocuments%2Fchefsocial-voice%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fpierre-marccardinal%2FDocuments%2Fchefsocial-voice&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/auth/route.ts":
/*!***********************************!*\
  !*** ./src/app/api/auth/route.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DELETE: () => (/* binding */ DELETE),\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var stripe__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! stripe */ \"(rsc)/./node_modules/stripe/esm/stripe.esm.node.js\");\n/* harmony import */ var _lib_database__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../lib/database */ \"(rsc)/./src/lib/database.ts\");\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../lib/auth */ \"(rsc)/./src/lib/auth.ts\");\n/* harmony import */ var _lib_validation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../lib/validation */ \"(rsc)/./src/lib/validation.ts\");\n\n\n\n\n\n// Initialize Stripe\nconst stripe = new stripe__WEBPACK_IMPORTED_MODULE_1__[\"default\"](process.env.STRIPE_SECRET_KEY || \"\", {\n    apiVersion: \"2025-05-28.basil\"\n});\n// POST /api/auth - Handle login, register, and token refresh\nasync function POST(request) {\n    try {\n        const body = await request.json();\n        const { action } = body;\n        // Handle token refresh\n        if (action === \"refresh\") {\n            return handleTokenRefresh(body);\n        }\n        // Validate auth request (login or register)\n        const validation = (0,_lib_validation__WEBPACK_IMPORTED_MODULE_4__.validateInput)(_lib_validation__WEBPACK_IMPORTED_MODULE_4__.authRequestSchema, body);\n        if (!validation.success) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Validation failed\",\n                details: validation.errors\n            }, {\n                status: 400\n            });\n        }\n        const validatedData = validation.data;\n        if (validatedData.action === \"login\") {\n            return handleLogin(validatedData);\n        } else if (validatedData.action === \"register\") {\n            return handleRegister(validatedData);\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: \"Invalid action\"\n        }, {\n            status: 400\n        });\n    } catch (error) {\n        console.error(\"Auth API error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: _lib_validation__WEBPACK_IMPORTED_MODULE_4__.ERROR_MESSAGES.INTERNAL_ERROR\n        }, {\n            status: 500\n        });\n    }\n}\n// Handle user login\nasync function handleLogin(data) {\n    try {\n        const email = (0,_lib_validation__WEBPACK_IMPORTED_MODULE_4__.sanitizeEmail)(data.email);\n        // Find user in database\n        const user = _lib_database__WEBPACK_IMPORTED_MODULE_2__.database.getUserByEmail(email);\n        if (!user) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: _lib_validation__WEBPACK_IMPORTED_MODULE_4__.ERROR_MESSAGES.INVALID_CREDENTIALS,\n                message: \"Email or password is incorrect\"\n            }, {\n                status: 401\n            });\n        }\n        // Verify password\n        const isValidPassword = await _lib_auth__WEBPACK_IMPORTED_MODULE_3__.authService.verifyPassword(data.password, user.passwordHash);\n        if (!isValidPassword) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: _lib_validation__WEBPACK_IMPORTED_MODULE_4__.ERROR_MESSAGES.INVALID_CREDENTIALS,\n                message: \"Email or password is incorrect\"\n            }, {\n                status: 401\n            });\n        }\n        // Update last login timestamp\n        _lib_database__WEBPACK_IMPORTED_MODULE_2__.database.updateLastLogin(user.id);\n        // Create auth tokens\n        const tokens = _lib_auth__WEBPACK_IMPORTED_MODULE_3__.authService.createAuthTokens(user);\n        // Return success response with tokens\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: \"Login successful\",\n            user: _lib_auth__WEBPACK_IMPORTED_MODULE_3__.authService.toPublicUser(user),\n            accessToken: tokens.accessToken,\n            refreshToken: tokens.refreshToken\n        });\n    } catch (error) {\n        console.error(\"Login error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: _lib_validation__WEBPACK_IMPORTED_MODULE_4__.ERROR_MESSAGES.INTERNAL_ERROR\n        }, {\n            status: 500\n        });\n    }\n}\n// Handle user registration\nasync function handleRegister(data) {\n    try {\n        const email = (0,_lib_validation__WEBPACK_IMPORTED_MODULE_4__.sanitizeEmail)(data.email);\n        // Check if user already exists\n        const existingUser = _lib_database__WEBPACK_IMPORTED_MODULE_2__.database.getUserByEmail(email);\n        if (existingUser) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: _lib_validation__WEBPACK_IMPORTED_MODULE_4__.ERROR_MESSAGES.USER_EXISTS,\n                message: \"An account with this email already exists\"\n            }, {\n                status: 409\n            });\n        }\n        // Hash password\n        const passwordHash = await _lib_auth__WEBPACK_IMPORTED_MODULE_3__.authService.hashPassword(data.password);\n        // Create Stripe customer\n        let stripeCustomerId;\n        try {\n            const stripeCustomer = await stripe.customers.create({\n                email,\n                name: data.name,\n                metadata: {\n                    restaurant_name: data.restaurantName,\n                    cuisine_type: data.cuisineType || \"\",\n                    location: data.location || \"\",\n                    phone: data.phone || \"\",\n                    source: \"chefsocial_registration\",\n                    marketing_consent: data.marketingConsent?.toString() || \"false\"\n                }\n            });\n            stripeCustomerId = stripeCustomer.id;\n        } catch (stripeError) {\n            console.error(\"Stripe customer creation failed:\", stripeError);\n        // Continue with registration even if Stripe fails\n        }\n        // Prepare user data\n        const trialStartDate = new Date().toISOString();\n        const trialEndDate = new Date(Date.now() + 14 * 24 * 60 * 60 * 1000).toISOString();\n        const userData = {\n            email,\n            passwordHash,\n            name: data.name,\n            restaurantName: data.restaurantName,\n            cuisineType: data.cuisineType,\n            location: data.location,\n            phone: data.phone,\n            role: \"user\",\n            subscriptionStatus: \"trialing\",\n            trialStartDate,\n            trialEndDate,\n            stripeCustomerId,\n            stripeSubscriptionId: undefined,\n            marketingConsent: data.marketingConsent || false,\n            emailVerified: false,\n            onboardingCompleted: false\n        };\n        // Create user in database\n        const newUser = await _lib_database__WEBPACK_IMPORTED_MODULE_2__.database.createUser(userData);\n        // Create auth tokens\n        const tokens = _lib_auth__WEBPACK_IMPORTED_MODULE_3__.authService.createAuthTokens(newUser);\n        // Return success response\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: \"Registration successful\",\n            user: _lib_auth__WEBPACK_IMPORTED_MODULE_3__.authService.toPublicUser(newUser),\n            accessToken: tokens.accessToken,\n            refreshToken: tokens.refreshToken\n        }, {\n            status: 201\n        });\n    } catch (error) {\n        console.error(\"Registration error:\", error);\n        if (error instanceof Error && error.message.includes(\"already exists\")) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: _lib_validation__WEBPACK_IMPORTED_MODULE_4__.ERROR_MESSAGES.USER_EXISTS,\n                message: \"An account with this email already exists\"\n            }, {\n                status: 409\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: _lib_validation__WEBPACK_IMPORTED_MODULE_4__.ERROR_MESSAGES.INTERNAL_ERROR\n        }, {\n            status: 500\n        });\n    }\n}\n// Handle token refresh\nasync function handleTokenRefresh(body) {\n    try {\n        // Validate refresh token request\n        const validation = (0,_lib_validation__WEBPACK_IMPORTED_MODULE_4__.validateInput)(_lib_validation__WEBPACK_IMPORTED_MODULE_4__.refreshTokenRequestSchema, body);\n        if (!validation.success) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Invalid refresh token format\",\n                details: validation.errors\n            }, {\n                status: 400\n            });\n        }\n        const { refreshToken } = validation.data;\n        // Refresh the access token\n        const result = await _lib_auth__WEBPACK_IMPORTED_MODULE_3__.authService.refreshAccessToken(refreshToken);\n        if (!result.success) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: result.error || \"Token refresh failed\"\n            }, {\n                status: 401\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: \"Token refreshed successfully\",\n            accessToken: result.accessToken,\n            refreshToken: result.refreshToken\n        });\n    } catch (error) {\n        console.error(\"Token refresh error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: \"Token refresh failed\"\n        }, {\n            status: 500\n        });\n    }\n}\n// POST /api/auth/logout - Handle logout (revoke refresh token)\nasync function DELETE(request) {\n    try {\n        const body = await request.json();\n        const { refreshToken, logoutAll = false } = body;\n        if (logoutAll) {\n            // Logout from all devices - need user ID\n            const user = await _lib_auth__WEBPACK_IMPORTED_MODULE_3__.authService.getUserFromRequest(request);\n            if (user) {\n                _lib_auth__WEBPACK_IMPORTED_MODULE_3__.authService.revokeAllUserTokens(user.id);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: true,\n                    message: \"Logged out from all devices\"\n                });\n            }\n        } else if (refreshToken) {\n            // Logout from current device\n            const success = _lib_auth__WEBPACK_IMPORTED_MODULE_3__.authService.revokeRefreshToken(refreshToken);\n            if (success) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: true,\n                    message: \"Logout successful\"\n                });\n            }\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: \"Logout failed\"\n        }, {\n            status: 400\n        });\n    } catch (error) {\n        console.error(\"Logout error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: \"Logout failed\"\n        }, {\n            status: 500\n        });\n    }\n}\n// GET /api/auth/me - Get current user info\nasync function GET(request) {\n    try {\n        const user = await _lib_auth__WEBPACK_IMPORTED_MODULE_3__.authService.getUserFromRequest(request);\n        if (!user) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Not authenticated\"\n            }, {\n                status: 401\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            user: _lib_auth__WEBPACK_IMPORTED_MODULE_3__.authService.toPublicUser(user)\n        });\n    } catch (error) {\n        console.error(\"Get user error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: _lib_validation__WEBPACK_IMPORTED_MODULE_4__.ERROR_MESSAGES.INTERNAL_ERROR\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/auth/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/auth.ts":
/*!*************************!*\
  !*** ./src/lib/auth.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthService: () => (/* binding */ AuthService),\n/* harmony export */   authService: () => (/* binding */ authService),\n/* harmony export */   requireAuth: () => (/* binding */ requireAuth),\n/* harmony export */   requireRole: () => (/* binding */ requireRole)\n/* harmony export */ });\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsonwebtoken */ \"(rsc)/./node_modules/jsonwebtoken/index.js\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bcryptjs */ \"(rsc)/./node_modules/bcryptjs/index.js\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(bcryptjs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _lib_database__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/database */ \"(rsc)/./src/lib/database.ts\");\n\n\n\n\n// JWT Configuration\nconst JWT_SECRET = process.env.JWT_SECRET || \"dev-jwt-secret-key\";\nconst JWT_REFRESH_SECRET = process.env.JWT_REFRESH_SECRET || \"dev-refresh-secret-key\";\nconst ACCESS_TOKEN_EXPIRY = \"15m\"; // 15 minutes\nconst REFRESH_TOKEN_EXPIRY = \"7d\"; // 7 days\nclass AuthService {\n    // Generate JWT access token\n    generateAccessToken(payload) {\n        return jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default().sign(payload, JWT_SECRET, {\n            expiresIn: ACCESS_TOKEN_EXPIRY,\n            issuer: \"chefsocial-api\",\n            audience: \"chefsocial-app\"\n        });\n    }\n    // Generate refresh token\n    generateRefreshToken(userId) {\n        const token = crypto__WEBPACK_IMPORTED_MODULE_2___default().randomBytes(64).toString(\"hex\");\n        const tokenHash = crypto__WEBPACK_IMPORTED_MODULE_2___default().createHash(\"sha256\").update(token).digest(\"hex\");\n        const expiresAt = new Date(Date.now() + 7 * 24 * 60 * 60 * 1000); // 7 days\n        // Store in database\n        _lib_database__WEBPACK_IMPORTED_MODULE_3__.database.createRefreshToken(userId, tokenHash, expiresAt);\n        return {\n            token,\n            tokenHash,\n            expiresAt\n        };\n    }\n    // Verify JWT access token\n    verifyAccessToken(token) {\n        try {\n            const decoded = jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default().verify(token, JWT_SECRET, {\n                issuer: \"chefsocial-api\",\n                audience: \"chefsocial-app\"\n            });\n            return decoded;\n        } catch (error) {\n            console.error(\"Access token verification failed:\", error);\n            return null;\n        }\n    }\n    // Verify refresh token\n    async verifyRefreshToken(token) {\n        try {\n            const tokenHash = crypto__WEBPACK_IMPORTED_MODULE_2___default().createHash(\"sha256\").update(token).digest(\"hex\");\n            const refreshToken = _lib_database__WEBPACK_IMPORTED_MODULE_3__.database.getRefreshToken(tokenHash);\n            if (!refreshToken) {\n                return null;\n            }\n            // Check if token is expired\n            if (refreshToken.expiresAt < new Date()) {\n                _lib_database__WEBPACK_IMPORTED_MODULE_3__.database.revokeRefreshToken(tokenHash);\n                return null;\n            }\n            return refreshToken;\n        } catch (error) {\n            console.error(\"Refresh token verification failed:\", error);\n            return null;\n        }\n    }\n    // Hash password\n    async hashPassword(password) {\n        const saltRounds = 12;\n        return bcryptjs__WEBPACK_IMPORTED_MODULE_1___default().hash(password, saltRounds);\n    }\n    // Verify password\n    async verifyPassword(password, hashedPassword) {\n        return bcryptjs__WEBPACK_IMPORTED_MODULE_1___default().compare(password, hashedPassword);\n    }\n    // Extract user from request\n    async getUserFromRequest(request) {\n        const token = this.extractTokenFromRequest(request);\n        if (!token) return null;\n        const payload = this.verifyAccessToken(token);\n        if (!payload) return null;\n        return _lib_database__WEBPACK_IMPORTED_MODULE_3__.database.getUserById(payload.userId);\n    }\n    // Extract token from request headers\n    extractTokenFromRequest(request) {\n        const authHeader = request.headers.get(\"authorization\");\n        if (!authHeader) return null;\n        const parts = authHeader.split(\" \");\n        if (parts.length !== 2 || parts[0] !== \"Bearer\") return null;\n        return parts[1];\n    }\n    // Create auth tokens for user\n    createAuthTokens(user) {\n        const payload = {\n            userId: user.id,\n            email: user.email,\n            role: user.role\n        };\n        const accessToken = this.generateAccessToken(payload);\n        const { token: refreshToken } = this.generateRefreshToken(user.id);\n        return {\n            accessToken,\n            refreshToken\n        };\n    }\n    // Refresh access token using refresh token\n    async refreshAccessToken(refreshToken) {\n        try {\n            const tokenData = await this.verifyRefreshToken(refreshToken);\n            if (!tokenData) {\n                return {\n                    success: false,\n                    error: \"Invalid or expired refresh token\"\n                };\n            }\n            const user = _lib_database__WEBPACK_IMPORTED_MODULE_3__.database.getUserById(tokenData.userId);\n            if (!user) {\n                _lib_database__WEBPACK_IMPORTED_MODULE_3__.database.revokeRefreshToken(tokenData.tokenHash);\n                return {\n                    success: false,\n                    error: \"User not found\"\n                };\n            }\n            // Revoke old refresh token\n            _lib_database__WEBPACK_IMPORTED_MODULE_3__.database.revokeRefreshToken(tokenData.tokenHash);\n            // Create new tokens\n            const tokens = this.createAuthTokens(user);\n            return {\n                success: true,\n                accessToken: tokens.accessToken,\n                refreshToken: tokens.refreshToken\n            };\n        } catch (error) {\n            console.error(\"Token refresh failed:\", error);\n            return {\n                success: false,\n                error: \"Token refresh failed\"\n            };\n        }\n    }\n    // Revoke all user tokens (logout from all devices)\n    revokeAllUserTokens(userId) {\n        _lib_database__WEBPACK_IMPORTED_MODULE_3__.database.revokeAllUserRefreshTokens(userId);\n    }\n    // Revoke specific refresh token (logout from specific device)\n    revokeRefreshToken(refreshToken) {\n        try {\n            const tokenHash = crypto__WEBPACK_IMPORTED_MODULE_2___default().createHash(\"sha256\").update(refreshToken).digest(\"hex\");\n            _lib_database__WEBPACK_IMPORTED_MODULE_3__.database.revokeRefreshToken(tokenHash);\n            return true;\n        } catch (error) {\n            console.error(\"Token revocation failed:\", error);\n            return false;\n        }\n    }\n    // Convert User to PublicUser (remove sensitive data)\n    toPublicUser(user) {\n        return {\n            id: user.id,\n            email: user.email,\n            name: user.name,\n            restaurantName: user.restaurantName,\n            cuisineType: user.cuisineType,\n            location: user.location,\n            phone: user.phone,\n            role: user.role,\n            subscriptionStatus: user.subscriptionStatus,\n            trialEndDate: user.trialEndDate,\n            stripeCustomerId: user.stripeCustomerId,\n            emailVerified: user.emailVerified,\n            onboardingCompleted: user.onboardingCompleted,\n            createdAt: user.createdAt,\n            lastLoginAt: user.lastLoginAt\n        };\n    }\n    // Clean up expired tokens (should be run periodically)\n    cleanup() {\n        _lib_database__WEBPACK_IMPORTED_MODULE_3__.database.cleanupExpiredTokens();\n    }\n    // Check if user has required role\n    hasRole(user, requiredRole) {\n        const roles = Array.isArray(requiredRole) ? requiredRole : [\n            requiredRole\n        ];\n        return roles.includes(user.role);\n    }\n    // Check if user is admin\n    isAdmin(user) {\n        return user.role === \"admin\";\n    }\n    // Check if user can access resource\n    canAccessResource(user, resourceUserId) {\n        // Users can access their own resources, admins can access all\n        return user.id === resourceUserId || this.isAdmin(user);\n    }\n    // Rate limiting helper\n    getRateLimitKey(identifier, action) {\n        return `ratelimit:${action}:${identifier}`;\n    }\n    // Generate secure random token\n    generateSecureToken(length = 32) {\n        return crypto__WEBPACK_IMPORTED_MODULE_2___default().randomBytes(length).toString(\"hex\");\n    }\n    // Validate token format\n    isValidTokenFormat(token) {\n        // Check if token looks like a JWT (has 3 parts separated by dots)\n        const parts = token.split(\".\");\n        return parts.length === 3 && parts.every((part)=>part.length > 0);\n    }\n    // Create password reset token\n    createPasswordResetToken(userId) {\n        const token = this.generateSecureToken(32);\n        const expiresAt = new Date(Date.now() + 60 * 60 * 1000); // 1 hour\n        // In a real app, you'd store this in a separate table\n        // For now, we'll use a simple in-memory store or database\n        return {\n            token,\n            expiresAt\n        };\n    }\n    // Create email verification token\n    createEmailVerificationToken(userId) {\n        const token = this.generateSecureToken(32);\n        const expiresAt = new Date(Date.now() + 24 * 60 * 60 * 1000); // 24 hours\n        return {\n            token,\n            expiresAt\n        };\n    }\n}\n// Singleton instance\nconst authService = new AuthService();\n// Middleware helper functions\nfunction requireAuth(handler) {\n    return async (request)=>{\n        try {\n            const user = await authService.getUserFromRequest(request);\n            if (!user) {\n                return new Response(JSON.stringify({\n                    success: false,\n                    error: \"Authentication required\"\n                }), {\n                    status: 401,\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    }\n                });\n            }\n            return handler(request, user);\n        } catch (error) {\n            console.error(\"Auth middleware error:\", error);\n            return new Response(JSON.stringify({\n                success: false,\n                error: \"Authentication failed\"\n            }), {\n                status: 401,\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n        }\n    };\n}\nfunction requireRole(roles) {\n    return function(handler) {\n        return async (request)=>{\n            try {\n                const user = await authService.getUserFromRequest(request);\n                if (!user) {\n                    return new Response(JSON.stringify({\n                        success: false,\n                        error: \"Authentication required\"\n                    }), {\n                        status: 401,\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        }\n                    });\n                }\n                if (!authService.hasRole(user, roles)) {\n                    return new Response(JSON.stringify({\n                        success: false,\n                        error: \"Insufficient permissions\"\n                    }), {\n                        status: 403,\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        }\n                    });\n                }\n                return handler(request, user);\n            } catch (error) {\n                console.error(\"Role middleware error:\", error);\n                return new Response(JSON.stringify({\n                    success: false,\n                    error: \"Authorization failed\"\n                }), {\n                    status: 403,\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    }\n                });\n            }\n        };\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/auth.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/database.ts":
/*!*****************************!*\
  !*** ./src/lib/database.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DatabaseOperations: () => (/* binding */ DatabaseOperations),\n/* harmony export */   database: () => (/* binding */ database),\n/* harmony export */   initDatabase: () => (/* binding */ initDatabase)\n/* harmony export */ });\n/* harmony import */ var better_sqlite3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! better-sqlite3 */ \"better-sqlite3\");\n/* harmony import */ var better_sqlite3__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(better_sqlite3__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n\n\n// Database instance\nlet db;\n// Initialize database connection\nfunction initDatabase() {\n    if (db) return db;\n    const dbPath = path__WEBPACK_IMPORTED_MODULE_1___default().join(process.cwd(), \"data\", \"chefsocial.db\");\n    try {\n        // Ensure data directory exists\n        const fs = __webpack_require__(/*! fs */ \"fs\");\n        const dataDir = path__WEBPACK_IMPORTED_MODULE_1___default().dirname(dbPath);\n        if (!fs.existsSync(dataDir)) {\n            fs.mkdirSync(dataDir, {\n                recursive: true\n            });\n        }\n        db = new (better_sqlite3__WEBPACK_IMPORTED_MODULE_0___default())(dbPath);\n        db.pragma(\"journal_mode = WAL\"); // Better performance for concurrent reads\n        db.pragma(\"synchronous = NORMAL\"); // Balance between safety and performance\n        // Create tables\n        createTables();\n        console.log(\"Database initialized successfully\");\n        return db;\n    } catch (error) {\n        console.error(\"Failed to initialize database:\", error);\n        throw error;\n    }\n}\n// Create database tables\nfunction createTables() {\n    // Users table\n    db.exec(`\n    CREATE TABLE IF NOT EXISTS users (\n      id TEXT PRIMARY KEY,\n      email TEXT UNIQUE NOT NULL,\n      password_hash TEXT NOT NULL,\n      name TEXT NOT NULL,\n      restaurant_name TEXT NOT NULL,\n      cuisine_type TEXT DEFAULT '',\n      location TEXT DEFAULT '',\n      phone TEXT DEFAULT '',\n      role TEXT DEFAULT 'user',\n      subscription_status TEXT DEFAULT 'trialing',\n      trial_start_date TEXT,\n      trial_end_date TEXT,\n      stripe_customer_id TEXT,\n      stripe_subscription_id TEXT,\n      marketing_consent BOOLEAN DEFAULT false,\n      email_verified BOOLEAN DEFAULT false,\n      onboarding_completed BOOLEAN DEFAULT false,\n      created_at TEXT NOT NULL,\n      updated_at TEXT NOT NULL,\n      last_login_at TEXT\n    )\n  `);\n    // Refresh tokens table\n    db.exec(`\n    CREATE TABLE IF NOT EXISTS refresh_tokens (\n      id TEXT PRIMARY KEY,\n      user_id TEXT NOT NULL,\n      token_hash TEXT NOT NULL,\n      expires_at TEXT NOT NULL,\n      created_at TEXT NOT NULL,\n      revoked BOOLEAN DEFAULT false,\n      FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE\n    )\n  `);\n    // API rate limiting table\n    db.exec(`\n    CREATE TABLE IF NOT EXISTS rate_limits (\n      key TEXT PRIMARY KEY,\n      requests INTEGER DEFAULT 0,\n      window_start TEXT NOT NULL,\n      created_at TEXT NOT NULL,\n      updated_at TEXT NOT NULL\n    )\n  `);\n    // Create indexes for better performance\n    db.exec(`\n    CREATE INDEX IF NOT EXISTS idx_users_email ON users(email);\n    CREATE INDEX IF NOT EXISTS idx_refresh_tokens_user_id ON refresh_tokens(user_id);\n    CREATE INDEX IF NOT EXISTS idx_refresh_tokens_expires_at ON refresh_tokens(expires_at);\n    CREATE INDEX IF NOT EXISTS idx_rate_limits_window_start ON rate_limits(window_start);\n  `);\n    console.log(\"Database tables created successfully\");\n}\n// Database operations\nclass DatabaseOperations {\n    constructor(){\n        this.db = initDatabase();\n        createTables(); // Ensure tables are created\n    }\n    // User operations\n    async createUser(userData) {\n        const id = `user_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n        const now = new Date().toISOString();\n        const stmt = this.db.prepare(`\n      INSERT INTO users (\n        id, email, password_hash, name, restaurant_name, cuisine_type,\n        location, phone, role, subscription_status, trial_start_date,\n        trial_end_date, stripe_customer_id, stripe_subscription_id,\n        marketing_consent, email_verified, onboarding_completed,\n        created_at, updated_at\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n    `);\n        try {\n            stmt.run(id, userData.email, userData.passwordHash, userData.name, userData.restaurantName, userData.cuisineType || \"\", userData.location || \"\", userData.phone || \"\", userData.role || \"user\", userData.subscriptionStatus || \"trialing\", userData.trialStartDate, userData.trialEndDate, userData.stripeCustomerId, userData.stripeSubscriptionId, userData.marketingConsent ? 1 : 0, userData.emailVerified ? 1 : 0, userData.onboardingCompleted ? 1 : 0, now, now);\n            return this.getUserById(id);\n        } catch (error) {\n            if (error.code === \"SQLITE_CONSTRAINT_UNIQUE\") {\n                throw new Error(\"User with this email already exists\");\n            }\n            throw error;\n        }\n    }\n    getUserByEmail(email) {\n        const stmt = this.db.prepare(\"SELECT * FROM users WHERE email = ? LIMIT 1\");\n        const row = stmt.get(email);\n        return row ? this.mapRowToUser(row) : null;\n    }\n    getUserById(id) {\n        const stmt = this.db.prepare(\"SELECT * FROM users WHERE id = ? LIMIT 1\");\n        const row = stmt.get(id);\n        return row ? this.mapRowToUser(row) : null;\n    }\n    updateUser(id, updates) {\n        const updateFields = Object.keys(updates).filter((key)=>key !== \"id\" && key !== \"createdAt\").map((key)=>`${this.camelToSnake(key)} = ?`).join(\", \");\n        if (!updateFields) return this.getUserById(id);\n        const values = Object.keys(updates).filter((key)=>key !== \"id\" && key !== \"createdAt\").map((key)=>updates[key]);\n        const stmt = this.db.prepare(`\n      UPDATE users \n      SET ${updateFields}, updated_at = ?\n      WHERE id = ?\n    `);\n        stmt.run(...values, new Date().toISOString(), id);\n        return this.getUserById(id);\n    }\n    updateLastLogin(id) {\n        const stmt = this.db.prepare(\"UPDATE users SET last_login_at = ? WHERE id = ?\");\n        stmt.run(new Date().toISOString(), id);\n    }\n    // Refresh token operations\n    createRefreshToken(userId, tokenHash, expiresAt) {\n        const id = `rt_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n        const stmt = this.db.prepare(`\n      INSERT INTO refresh_tokens (id, user_id, token_hash, expires_at, created_at)\n      VALUES (?, ?, ?, ?, ?)\n    `);\n        stmt.run(id, userId, tokenHash, expiresAt.toISOString(), new Date().toISOString());\n        return id;\n    }\n    getRefreshToken(tokenHash) {\n        const stmt = this.db.prepare(`\n      SELECT * FROM refresh_tokens \n      WHERE token_hash = ? AND revoked = false AND expires_at > datetime('now')\n      LIMIT 1\n    `);\n        const row = stmt.get(tokenHash);\n        if (!row) return null;\n        return {\n            id: row.id,\n            userId: row.user_id,\n            tokenHash: row.token_hash,\n            expiresAt: new Date(row.expires_at),\n            createdAt: new Date(row.created_at),\n            revoked: Boolean(row.revoked)\n        };\n    }\n    revokeRefreshToken(tokenHash) {\n        const stmt = this.db.prepare(\"UPDATE refresh_tokens SET revoked = true WHERE token_hash = ?\");\n        stmt.run(tokenHash);\n    }\n    revokeAllUserRefreshTokens(userId) {\n        const stmt = this.db.prepare(\"UPDATE refresh_tokens SET revoked = true WHERE user_id = ?\");\n        stmt.run(userId);\n    }\n    // Clean up expired tokens\n    cleanupExpiredTokens() {\n        const stmt = this.db.prepare(\"DELETE FROM refresh_tokens WHERE expires_at < datetime('now')\");\n        const result = stmt.run();\n        if (result.changes > 0) {\n            console.log(`Cleaned up ${result.changes} expired refresh tokens`);\n        }\n    }\n    // Rate limiting operations\n    getRateLimit(key) {\n        const stmt = this.db.prepare(\"SELECT * FROM rate_limits WHERE key = ? LIMIT 1\");\n        const row = stmt.get(key);\n        if (!row) return null;\n        return {\n            requests: row.requests,\n            windowStart: new Date(row.window_start)\n        };\n    }\n    updateRateLimit(key, requests, windowStart) {\n        const now = new Date().toISOString();\n        const stmt = this.db.prepare(`\n      INSERT OR REPLACE INTO rate_limits (key, requests, window_start, created_at, updated_at)\n      VALUES (?, ?, ?, COALESCE((SELECT created_at FROM rate_limits WHERE key = ?), ?), ?)\n    `);\n        stmt.run(key, requests, windowStart.toISOString(), key, now, now);\n    }\n    // Utility methods\n    mapRowToUser(row) {\n        return {\n            id: row.id,\n            email: row.email,\n            passwordHash: row.password_hash,\n            name: row.name,\n            restaurantName: row.restaurant_name,\n            cuisineType: row.cuisine_type,\n            location: row.location,\n            phone: row.phone,\n            role: row.role,\n            subscriptionStatus: row.subscription_status,\n            trialStartDate: row.trial_start_date,\n            trialEndDate: row.trial_end_date,\n            stripeCustomerId: row.stripe_customer_id,\n            stripeSubscriptionId: row.stripe_subscription_id,\n            marketingConsent: Boolean(row.marketing_consent),\n            emailVerified: Boolean(row.email_verified),\n            onboardingCompleted: Boolean(row.onboarding_completed),\n            createdAt: row.created_at,\n            updatedAt: row.updated_at,\n            lastLoginAt: row.last_login_at\n        };\n    }\n    camelToSnake(str) {\n        return str.replace(/[A-Z]/g, (letter)=>`_${letter.toLowerCase()}`);\n    }\n    // Health check\n    healthCheck() {\n        try {\n            this.db.prepare(\"SELECT 1\").get();\n            return true;\n        } catch (error) {\n            console.error(\"Database health check failed:\", error);\n            return false;\n        }\n    }\n    // Close database connection\n    close() {\n        if (this.db) {\n            this.db.close();\n        }\n    }\n}\n// Singleton instance\nconst database = new DatabaseOperations();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/database.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/validation.ts":
/*!*******************************!*\
  !*** ./src/lib/validation.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ERROR_MESSAGES: () => (/* binding */ ERROR_MESSAGES),\n/* harmony export */   authRequestSchema: () => (/* binding */ authRequestSchema),\n/* harmony export */   cuisineTypeSchema: () => (/* binding */ cuisineTypeSchema),\n/* harmony export */   emailSchema: () => (/* binding */ emailSchema),\n/* harmony export */   getPasswordStrength: () => (/* binding */ getPasswordStrength),\n/* harmony export */   idSchema: () => (/* binding */ idSchema),\n/* harmony export */   locationSchema: () => (/* binding */ locationSchema),\n/* harmony export */   loginRequestSchema: () => (/* binding */ loginRequestSchema),\n/* harmony export */   nameSchema: () => (/* binding */ nameSchema),\n/* harmony export */   paginationSchema: () => (/* binding */ paginationSchema),\n/* harmony export */   passwordSchema: () => (/* binding */ passwordSchema),\n/* harmony export */   phoneSchema: () => (/* binding */ phoneSchema),\n/* harmony export */   rateLimitKeySchema: () => (/* binding */ rateLimitKeySchema),\n/* harmony export */   refreshTokenRequestSchema: () => (/* binding */ refreshTokenRequestSchema),\n/* harmony export */   registerRequestSchema: () => (/* binding */ registerRequestSchema),\n/* harmony export */   restaurantNameSchema: () => (/* binding */ restaurantNameSchema),\n/* harmony export */   roleSchema: () => (/* binding */ roleSchema),\n/* harmony export */   sanitizeEmail: () => (/* binding */ sanitizeEmail),\n/* harmony export */   sanitizeString: () => (/* binding */ sanitizeString),\n/* harmony export */   subscriptionStatusSchema: () => (/* binding */ subscriptionStatusSchema),\n/* harmony export */   userIdSchema: () => (/* binding */ userIdSchema),\n/* harmony export */   userProfileUpdateSchema: () => (/* binding */ userProfileUpdateSchema),\n/* harmony export */   validateInput: () => (/* binding */ validateInput)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"(rsc)/./node_modules/zod/dist/esm/index.js\");\n\n// Email validation schema\nconst emailSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.string().email(\"Invalid email format\").min(1, \"Email is required\").max(255, \"Email is too long\");\n// Password validation schema\nconst passwordSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.string().min(8, \"Password must be at least 8 characters\").max(128, \"Password is too long\").regex(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/, \"Password must contain at least one lowercase letter, one uppercase letter, and one number\");\n// Name validation schema  \nconst nameSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.string().min(1, \"Name is required\").max(100, \"Name is too long\").regex(/^[a-zA-Z\\s\\-']+$/, \"Name can only contain letters, spaces, hyphens, and apostrophes\");\n// Restaurant name validation schema\nconst restaurantNameSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.string().min(1, \"Restaurant name is required\").max(100, \"Restaurant name is too long\");\n// Phone validation schema (optional)\nconst phoneSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional().refine((phone)=>{\n    if (!phone) return true; // Optional field\n    return /^\\+?[\\d\\s\\-\\(\\)]+$/.test(phone) && phone.replace(/\\D/g, \"\").length >= 7;\n}, \"Invalid phone number format\");\n// Location validation schema (optional)\nconst locationSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.string().max(200, \"Location is too long\").optional();\n// Cuisine type validation schema (optional)\nconst cuisineTypeSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.string().max(50, \"Cuisine type is too long\").optional();\n// Login request validation\nconst loginRequestSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    action: zod__WEBPACK_IMPORTED_MODULE_0__.z.literal(\"login\"),\n    email: emailSchema,\n    password: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().min(1, \"Password is required\")\n});\n// Registration request validation\nconst registerRequestSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    action: zod__WEBPACK_IMPORTED_MODULE_0__.z.literal(\"register\"),\n    email: emailSchema,\n    password: passwordSchema,\n    name: nameSchema,\n    restaurantName: restaurantNameSchema,\n    cuisineType: cuisineTypeSchema,\n    location: locationSchema,\n    phone: phoneSchema,\n    marketingConsent: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().optional().default(false)\n});\n// Auth request validation (union of login and register)\nconst authRequestSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.discriminatedUnion(\"action\", [\n    loginRequestSchema,\n    registerRequestSchema\n]);\n// Refresh token request validation\nconst refreshTokenRequestSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    refreshToken: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().min(1, \"Refresh token is required\")\n});\n// User profile update validation\nconst userProfileUpdateSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    name: nameSchema.optional(),\n    restaurantName: restaurantNameSchema.optional(),\n    cuisineType: cuisineTypeSchema,\n    location: locationSchema,\n    phone: phoneSchema,\n    marketingConsent: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().optional()\n}).refine((data)=>Object.values(data).some((value)=>value !== undefined), {\n    message: \"At least one field must be provided for update\"\n});\n// User ID validation\nconst userIdSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.string().min(1, \"User ID is required\").regex(/^user_\\d+_[a-zA-Z0-9]+$/, \"Invalid user ID format\");\n// Role validation\nconst roleSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z[\"enum\"]([\n    \"user\",\n    \"admin\",\n    \"moderator\"\n]);\n// Subscription status validation\nconst subscriptionStatusSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z[\"enum\"]([\n    \"trialing\",\n    \"active\",\n    \"past_due\",\n    \"canceled\",\n    \"unpaid\"\n]);\n// Pagination validation\nconst paginationSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    page: zod__WEBPACK_IMPORTED_MODULE_0__.z.coerce.number().int().min(1).default(1),\n    limit: zod__WEBPACK_IMPORTED_MODULE_0__.z.coerce.number().int().min(1).max(100).default(10)\n});\n// Rate limiting validation helpers\nconst rateLimitKeySchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.string().min(1).max(255);\n// Generic ID validation\nconst idSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.string().min(1, \"ID is required\");\n// Validation utility functions\nfunction validateInput(schema, data) {\n    try {\n        const validatedData = schema.parse(data);\n        return {\n            success: true,\n            data: validatedData\n        };\n    } catch (error) {\n        if (error instanceof zod__WEBPACK_IMPORTED_MODULE_0__.z.ZodError) {\n            const errors = {};\n            error.errors.forEach((err)=>{\n                const path = err.path.join(\".\");\n                errors[path] = err.message;\n            });\n            return {\n                success: false,\n                errors\n            };\n        }\n        return {\n            success: false,\n            errors: {\n                general: \"Validation failed\"\n            }\n        };\n    }\n}\n// Sanitization helpers\nfunction sanitizeString(input) {\n    if (!input) return \"\";\n    return input.trim().replace(/\\s+/g, \" \");\n}\nfunction sanitizeEmail(email) {\n    return email.toLowerCase().trim();\n}\n// Password strength validation\nfunction getPasswordStrength(password) {\n    const feedback = [];\n    let score = 0;\n    if (password.length >= 8) score += 1;\n    else feedback.push(\"Use at least 8 characters\");\n    if (/[a-z]/.test(password)) score += 1;\n    else feedback.push(\"Include lowercase letters\");\n    if (/[A-Z]/.test(password)) score += 1;\n    else feedback.push(\"Include uppercase letters\");\n    if (/\\d/.test(password)) score += 1;\n    else feedback.push(\"Include numbers\");\n    if (/[^a-zA-Z0-9]/.test(password)) score += 1;\n    else feedback.push(\"Include special characters\");\n    if (password.length >= 12) score += 1;\n    return {\n        score,\n        feedback\n    };\n}\n// Common error messages\nconst ERROR_MESSAGES = {\n    REQUIRED_FIELD: \"This field is required\",\n    INVALID_EMAIL: \"Please enter a valid email address\",\n    WEAK_PASSWORD: \"Password does not meet security requirements\",\n    INVALID_PHONE: \"Please enter a valid phone number\",\n    MAX_LENGTH_EXCEEDED: \"Input is too long\",\n    INVALID_FORMAT: \"Invalid format\",\n    USER_EXISTS: \"A user with this email already exists\",\n    USER_NOT_FOUND: \"User not found\",\n    INVALID_CREDENTIALS: \"Invalid email or password\",\n    UNAUTHORIZED: \"You are not authorized to perform this action\",\n    RATE_LIMIT_EXCEEDED: \"Too many requests. Please try again later.\",\n    INTERNAL_ERROR: \"An internal error occurred. Please try again.\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/validation.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/stripe","vendor-chunks/semver","vendor-chunks/next","vendor-chunks/jsonwebtoken","vendor-chunks/zod","vendor-chunks/math-intrinsics","vendor-chunks/es-errors","vendor-chunks/qs","vendor-chunks/jws","vendor-chunks/call-bind-apply-helpers","vendor-chunks/get-proto","vendor-chunks/object-inspect","vendor-chunks/has-symbols","vendor-chunks/gopd","vendor-chunks/function-bind","vendor-chunks/ecdsa-sig-formatter","vendor-chunks/bcryptjs","vendor-chunks/side-channel","vendor-chunks/side-channel-weakmap","vendor-chunks/side-channel-map","vendor-chunks/side-channel-list","vendor-chunks/safe-buffer","vendor-chunks/ms","vendor-chunks/lodash.once","vendor-chunks/lodash.isstring","vendor-chunks/lodash.isplainobject","vendor-chunks/lodash.isnumber","vendor-chunks/lodash.isinteger","vendor-chunks/lodash.isboolean","vendor-chunks/lodash.includes","vendor-chunks/jwa","vendor-chunks/hasown","vendor-chunks/get-intrinsic","vendor-chunks/es-object-atoms","vendor-chunks/es-define-property","vendor-chunks/dunder-proto","vendor-chunks/call-bound","vendor-chunks/buffer-equal-constant-time"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2Froute&page=%2Fapi%2Fauth%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Froute.ts&appDir=%2FUsers%2Fpierre-marccardinal%2FDocuments%2Fchefsocial-voice%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fpierre-marccardinal%2FDocuments%2Fchefsocial-voice&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();